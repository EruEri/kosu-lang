# Test float implementation
  $ kosuc --arch x86_64 --os linux --no-std test_float.kosu && ./a.out
  f64: 3.140000 + 3.140000 = 6.280000
  f64: 3.140000 - 3.140000 = 0.000000
  f64: 3.140000 / 3.140000 = 1.000000
  f64: 0.100000 + 0.200000 = 0.300000
  f64: 0.100000 - 0.200000 = -0.100000
  f64: 0.100000 / 0.200000 = 0.500000
  f64: -3.670000 + 3.671000 = 0.001000
  f64: -3.670000 - 3.671000 = -7.341000
  f64: -3.670000 / 3.671000 = -0.999728
  f64: -7.980000 + 0.450000 = -7.530000
  f64: -7.980000 - 0.450000 = -8.430000
  f64: -7.980000 / 0.450000 = -17.733333
  f64: 0.000000 < 2.700000  : true
  f64: 0.000000 <= 2.700000 : true
  f64: 0.000000 > 2.700000  : false
  f64: 0.000000 >= 2.700000 : false
  f64: 0.000000 == 2.700000 : false
  f64: 0.000000 != 2.700000 : true
  
  f64: 65.700000 < 87.000000  : true
  f64: 65.700000 <= 87.000000 : true
  f64: 65.700000 > 87.000000  : false
  f64: 65.700000 >= 87.000000 : false
  f64: 65.700000 == 87.000000 : false
  f64: 65.700000 != 87.000000 : true
  
  f64: 4.000000 < 4.000000  : false
  f64: 4.000000 <= 4.000000 : true
  f64: 4.000000 > 4.000000  : false
  f64: 4.000000 >= 4.000000 : true
  f64: 4.000000 == 4.000000 : true
  f64: 4.000000 != 4.000000 : false
  
  f64: 0.000000 < 0.000000  : false
  f64: 0.000000 <= 0.000000 : true
  f64: 0.000000 > 0.000000  : false
  f64: 0.000000 >= 0.000000 : true
  f64: 0.000000 == 0.000000 : true
  f64: 0.000000 != 0.000000 : false
  
  f64: 1.000000 < 1.000000  : false
  f64: 1.000000 <= 1.000000 : true
  f64: 1.000000 > 1.000000  : false
  f64: 1.000000 >= 1.000000 : true
  f64: 1.000000 == 1.000000 : true
  f64: 1.000000 != 1.000000 : false
  
  f64: -7.600000 < -7.600000  : false
  f64: -7.600000 <= -7.600000 : true
  f64: -7.600000 > -7.600000  : false
  f64: -7.600000 >= -7.600000 : true
  f64: -7.600000 == -7.600000 : true
  f64: -7.600000 != -7.600000 : false
  
  f64: -5.986300 < -7.100000  : false
  f64: -5.986300 <= -7.100000 : false
  f64: -5.986300 > -7.100000  : true
  f64: -5.986300 >= -7.100000 : true
  f64: -5.986300 == -7.100000 : false
  f64: -5.986300 != -7.100000 : true
  
  f64: -1.796900 < 2.761580  : true
  f64: -1.796900 <= 2.761580 : true
  f64: -1.796900 > 2.761580  : false
  f64: -1.796900 >= 2.761580 : false
  f64: -1.796900 == 2.761580 : false
  f64: -1.796900 != 2.761580 : true
  
  f32: 3.140000 + 3.140000 = 6.280000
  f32: 3.140000 - 3.140000 = 0.000000
  f32: 3.140000 / 3.140000 = 1.000000
  f32: 0.100000 + 0.200000 = 0.300000
  f32: 0.100000 - 0.200000 = -0.100000
  f32: 0.100000 / 0.200000 = 0.500000
  f32: -3.670000 + 3.671000 = 0.001000
  f32: -3.670000 - 3.671000 = -7.341000
  f32: -3.670000 / 3.671000 = -0.999728
  f32: -7.980000 + 0.450000 = -7.530000
  f32: -7.980000 - 0.450000 = -8.430000
  f32: -7.980000 / 0.450000 = -17.733334
  f32: 0.000000 < 2.700000  : true
  f32: 0.000000 <= 2.700000 : true
  f32: 0.000000 > 2.700000  : false
  f32: 0.000000 >= 2.700000 : false
  f32: 0.000000 == 2.700000 : false
  f32: 0.000000 != 2.700000 : true
  
  f32: 65.699997 < 87.000000  : true
  f32: 65.699997 <= 87.000000 : true
  f32: 65.699997 > 87.000000  : false
  f32: 65.699997 >= 87.000000 : false
  f32: 65.699997 == 87.000000 : false
  f32: 65.699997 != 87.000000 : true
  
  f32: 4.000000 < 4.000000  : false
  f32: 4.000000 <= 4.000000 : true
  f32: 4.000000 > 4.000000  : false
  f32: 4.000000 >= 4.000000 : true
  f32: 4.000000 == 4.000000 : true
  f32: 4.000000 != 4.000000 : false
  
  f32: 0.000000 < 0.000000  : false
  f32: 0.000000 <= 0.000000 : true
  f32: 0.000000 > 0.000000  : false
  f32: 0.000000 >= 0.000000 : true
  f32: 0.000000 == 0.000000 : true
  f32: 0.000000 != 0.000000 : false
  
  f32: 1.000000 < 1.000000  : false
  f32: 1.000000 <= 1.000000 : true
  f32: 1.000000 > 1.000000  : false
  f32: 1.000000 >= 1.000000 : true
  f32: 1.000000 == 1.000000 : true
  f32: 1.000000 != 1.000000 : false
  
  f32: -7.600000 < -7.600000  : false
  f32: -7.600000 <= -7.600000 : true
  f32: -7.600000 > -7.600000  : false
  f32: -7.600000 >= -7.600000 : true
  f32: -7.600000 == -7.600000 : true
  f32: -7.600000 != -7.600000 : false
  
  f32: -5.986300 < -7.100000  : false
  f32: -5.986300 <= -7.100000 : false
  f32: -5.986300 > -7.100000  : true
  f32: -5.986300 >= -7.100000 : true
  f32: -5.986300 == -7.100000 : false
  f32: -5.986300 != -7.100000 : true
  
  f32: -79.796898 < 79.767578  : true
  f32: -79.796898 <= 79.767578 : true
  f32: -79.796898 > 79.767578  : false
  f32: -79.796898 >= 79.767578 : false
  f32: -79.796898 == 79.767578 : false
  f32: -79.796898 != 79.767578 : true
  
  f32: -4.799000 < 79.767799  : true
  f32: -4.799000 <= 79.767799 : true
  f32: -4.799000 > 79.767799  : false
  f32: -4.799000 >= 79.767799 : false
  f32: -4.799000 == 79.767799 : false
  f32: -4.799000 != 79.767799 : true
  
  u64: n = 56787009823568, f32: 56787009011712.000000, f64: 56787009823568.000000
  u64: n = 5786, f32: 5786.000000, f64: 5786.000000
  u64: n = 0, f32: 0.000000, f64: 0.000000
  s64: n = 68103730810, f32: 68103729152.000000, f64: 68103730810.000000
  s64: n = -68103730810, f32: -68103729152.000000, f64: -68103730810.000000
  s64: n = 0, f32: 0.000000, f64: 0.000000
  s32: n = 6810810, f32: 6810810.000000, f64: 6810810.000000
  s32: n = -610, f32: -610.000000, f64: -610.000000
  u32: n = 0, f32: 0.000000, f64: 0.000000
  u32: n = 6810810, f32: 6810810.000000, f64: 6810810.000000
  u32: n = 610, f32: 610.000000, f64: 610.000000
  u32: n = 0, f32: 0.000000, f64: 0.000000
  s16: n = -4726, f32: -4726.000000, f64: -4726.000000
  s16: n = -610, f32: -610.000000, f64: -610.000000
  s16: n = 0, f32: 0.000000, f64: 0.000000
  u16: n = 60602, f32: 60602.000000, f64: 60602.000000
  u16: n = 610, f32: 610.000000, f64: 610.000000
  u16: n = 0, f32: 0.000000, f64: 0.000000
  s8: n = 10, f32: 10.000000, f64: 10.000000
  s8: n = -61, f32: -61.000000, f64: -61.000000
  s8: n = 0, f32: 0.000000, f64: 0.000000
  u8: n = 210, f32: 210.000000, f64: 210.000000
  u8: n = 10, f32: 10.000000, f64: 10.000000
  u8: n = 0, f32: 0.000000, f64: 0.000000
